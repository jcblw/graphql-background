(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),s=(n(0),n(86)),a={id:"client-setup",title:"Client Setup",sidebar_label:"Setup client scripts"},i={unversionedId:"client-setup",id:"client-setup",isDocsHomePage:!1,title:"Client Setup",description:"Client here represent content, popover or any of the other page scripts that are created internally in the extension. These scripts have a relatively small amount of setup needed because they are already connected with the background script.",source:"@site/docs/client-script-setup.md",slug:"/client-setup",permalink:"/finch-graphql-docs/docs/client-setup",editUrl:"https://github.com/jointoucan/finch-graphql/edit/master/website/docs/client-script-setup.md",version:"current",sidebar_label:"Setup client scripts",sidebar:"someSidebar",previous:{title:"Advanced API usage",permalink:"/finch-graphql-docs/docs/advanced-api-usage"},next:{title:"Website Setup",permalink:"/finch-graphql-docs/docs/website-setup"}},c=[{value:"Querying information",id:"querying-information",children:[{value:"Custom message keys",id:"custom-message-keys",children:[]}]},{value:"React Hooks",id:"react-hooks",children:[{value:"useQuery",id:"usequery",children:[]},{value:"useMutation",id:"usemutation",children:[]},{value:"Custom message key with hooks",id:"custom-message-key-with-hooks",children:[]}]}],u={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Client here represent content, popover or any of the other page scripts that are created internally in the extension. These scripts have a relatively small amount of setup needed because they are already connected with the background script."),Object(s.b)("h2",{id:"querying-information"},"Querying information"),Object(s.b)("p",null,"To be able to get information from the background script you would need to write a GraphQL query, and then use the ",Object(s.b)("strong",{parentName:"p"},"queryApi")," method to pull that information from the GraphQL API."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"import { queryApi } from 'finch-graphql'\nimport gql from 'graphql-tag'\n\nconst GetBrowserPermission = gql`\n  query getBrowserPermission($input: PermissionsInput) {\n    browser {\n      permissions(input: $input)\n    }\n  }\n`\n\n;(async function main() {\n  const resp = await queryApi(GetBrowserPermission, {\n    input: { permissions: ['geolocation'] },\n  })\n\n  if (resp.data?.browser?.permissions) {\n    // Do stuff with permissions\n  }\n})()\n")),Object(s.b)("p",null,"In the above example we are asking the background process if the extension has the permission of ",Object(s.b)("strong",{parentName:"p"},"geolocation")," available to the extension. The we are able to check the response of the query to see if that permission is available. There is little to no setup here."),Object(s.b)("h3",{id:"custom-message-keys"},"Custom message keys"),Object(s.b)("p",null,"If you have a custom message key in your API then you can pass it in the options in the third argument of the ",Object(s.b)("strong",{parentName:"p"},"queryApi")," function."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"const resp = await queryApi(GetBrowserPermission, {\n  input: { permissions: ['geolocation'] },\n}, { \n  messageKey: 'customKey' \n});\n")),Object(s.b)("h2",{id:"react-hooks"},"React Hooks"),Object(s.b)("p",null,"Finch GraphQL comes packaged with React Hooks. This makes it super simple to start querying information from the graph from inside React Components. "),Object(s.b)("h3",{id:"usequery"},"useQuery"),Object(s.b)("p",null,"This hook queries information when the component is rendered, and exposes a few pieces of data to allow you to control your component until the data is present."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"const { useQuery } from 'finch-graphql'\n\nconst MyComponent = () => {\n  const { data, loading, error } = useQuery(GetBrowserPermission, {\n    variables: { input: { permissions: ['geolocation'] } },\n  })\n\n  if (loading) {\n    // show loading state\n    return null\n  }\n\n  if (error) {\n    // show error state\n    return <>{error.message}</>\n  }\n\n  const hasPermission = data?.browser?.permissions;\n\n  // do stuff with data\n  return ...\n}\n")),Object(s.b)("p",null,"In the example above we are fetching the same data in the other example but in this example we are rendering a React component, and rendering different states based on the state of the API query."),Object(s.b)("h3",{id:"usemutation"},"useMutation"),Object(s.b)("p",null,"This hook allows for graphQL mutations sets up a mutation but then only will execute the mutation once a returned function is called."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"const { useMutation } from 'finch-graphql'\n\nconst MyComponent = () => {\n  const [requestPermissions, { data, error }] = useMutation(RequestPermissionsDoc);\n\n  const onClick = async () => {\n    await requestPermissions({ input: { permissions: ['geolocation'] });\n  }\n\n  return (\n    <>\n      {error ? <p>{error.message}</p> : null}\n      <button onClick={onClick}>Request Geolocation Permission</button>\n    </>\n  )\n}\n")),Object(s.b)("p",null,"In the above example we setup a mutation that is going to request a permission from the background script. If an error happens we will show it and we can also confirm that it was successful though the data parameter."),Object(s.b)("h3",{id:"custom-message-key-with-hooks"},"Custom message key with hooks"),Object(s.b)("p",null,"To be able to pass a custom message key with hooks you can use the ",Object(s.b)("strong",{parentName:"p"},"ExtensionProvider")," and pass the message key there. It will flow down to all the hooks in the tree."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"const { ExtensionProvider } from 'finch-graphql'\n\nconst App = () => (\n  <ExtensionProvider messageKey=\"myCustomKey\">\n    {/* rest of app */}\n  </ExtensionProvider>\n)\n")))}p.isMDXComponent=!0},86:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},h=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(n),h=r,b=l["".concat(a,".").concat(h)]||l[h]||m[h]||s;return n?o.a.createElement(b,i(i({ref:t},u),{},{components:n})):o.a.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var u=2;u<s;u++)a[u]=n[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);